import { SignIn, SignInButton, SignOutButton, UserButton, useUser } from "@clerk/nextjs";
import Head from "next/head";
import Link from "next/link";
import { api } from "~/utils/api";
import type { RouterOutputs } from "~/utils/api";
import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
import Image from "next/image";
import { LoadingPage } from "~/components/loading";
dayjs.extend(relativeTime);

const CreatePostWizard = () => {

  const { user } = useUser();

  console.log(user);

  if (!user) return null;
  
  return (
    <div className="flex w-full gap-3">
      <Image 
        src={user.profileImageUrl} 
        alt="Profile Image" 
        className="h-14 w-14 rounded-full"
        width={56}
        height={56}
      />
      <input placeholder="Type some emojis" className="bg-transparent flex-grow outline-none" />
    </div>
  )
}

type PostWithAuthor = RouterOutputs["posts"]["getAll"][number];

const PostView = (props: PostWithAuthor) => {
  const { post, author } = props;
  return (
  <div key={post.id} className="flex gap-3 p-3 border-b border-slate-400"> 
    <Image 
      src={author.profileImageUrl}  
      className="h-12 w-12 rounded-full" 
      alt={`@${author.username}'s profile picture`}
      width={56}
      height={56}
    />
    <div className="flex flex-col">
      <div className="flex gap-1 text-slate-400">
        <span>{`@${author.username} Â·`}</span>
        <span className="font-thin">{`${dayjs(post.createdAt).fromNow()}`}</span>
      </div>
      <span>
        {post.content}
      </span>
    </div>
  </div>
  )
}

const Feed = () => {
  const { data, isLoading: postsLoading } = api.posts.getAll.useQuery(); //tRPC hook to run the query on the server
    
  if (postsLoading) return <div><LoadingPage/></div>;

  if (!data) return <div>Something went wrong</div>;

  return (
    <div className="flex flex-col">
      {data?.map((fullPost) => (
        <PostView {...fullPost} key={fullPost.post.id}/>
      ))}
    </div>
  )
}


export default function Home() {
  const { user, isLoaded: userLoaded, isSignedIn } = useUser();

  // tRPC hook to run the query on the server
  // fetching now to cache the data for later
  const { data } = api.posts.getAll.useQuery(); 
  
  // return empty div if user is not loaded
  if (!userLoaded) return <div />;

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex justify-center h-screen">
        <div className="h-full w-full md:max-w-2xl border-x border-slate-400">
          <div className="flex border-b border-slate-400 p-4">
          {!isSignedIn && (
          <div className="flex flex-grow gap-3">
            <SignInButton />
          </div>
          )}
          {isSignedIn && <CreatePostWizard />}
          </div>
          
          <Feed />
          
          <div><UserButton></UserButton></div>
        </div>
      </main>
    </>
  );
}
